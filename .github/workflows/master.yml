name: master

on:
  push:
    branches:
      - master

# Environment variables available to all jobs and steps in this workflow
env:
  GKE_PROJECT: ${{ secrets.GKE_PROJECT }}
  GKE_EMAIL: ${{ secrets.GKE_EMAIL }}
  GITHUB_SHA: ${{ github.sha }}
  GKE_ZONE: ${{ secrets.GKE_ZONE }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
  WEB_IMAGE: entegral-web

jobs:

  build-web:
    name: Build Web
    runs-on: ubuntu-latest
  strategy:
    matrix:
      node-version: [10.x, 12.x, 14.x, 15.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test

#      - name: Archive production artifacts
#        uses: actions/upload-artifact@v2
#        with:
#          name: go-dist
#          path: |
#            heimdallr
#  react:
#    name: Build React
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        node-version: [14.x]
#    steps:
#      - name: Use Node.js ${{ matrix.node-version }}
#        uses: actions/setup-node@v1
#        with:
#          node-version: ${{ matrix.node-version }}
#      - name: Checkout
#        uses: actions/checkout@master
#      - name: Cache node modules
#        uses: actions/cache@v2
#        with:
#          path: ./app/node_modules
#          key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
#      - name: Install Packages
#        run: npm install
#        working-directory: ./app
#      - name: Build page
#        run: npm run build
#        working-directory: ./app
#      - name: Archive production artifacts
#        uses: actions/upload-artifact@v2
#        with:
#          name: react-dist
#          path: |
#            ./app/dist
#  docker:
#    name: Build docker
#    runs-on: ubuntu-latest
#    needs: [ go, react ]
#    steps:
#      - uses: actions/download-artifact@v2
#        name: Get go binary
#        with:
#          name: go-dist
#      - uses: actions/download-artifact@v2
#        name: Get react
#        with:
#          name: react-dist
#      - name: Checkout
#        uses: actions/checkout@master
#
#      # Setup gcloud CLI
#      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
#        with:
#          version: '270.0.0'
#          service_account_email: ${{ secrets.GKE_EMAIL }}
#          service_account_key: ${{ secrets.GKE_KEY }}
#
#      # Configure docker to use the gcloud command-line tool as a credential helper
#      - run: |
#          # Set up docker to authenticate
#          # via gcloud command-line tool.
#          gcloud auth configure-docker
#      # Build the Docker image
#
#      - name: Build Image
#        run: |
#          docker build -t gcr.io/"${GKE_PROJECT}"/"${WEB_IMAGE}":"${GITHUB_SHA}" \
#            --build-arg GITHUB_SHA="${GITHUB_SHA}" \
#            --build-arg GITHUB_REF="${GITHUB_REF}" .
#      # Push the Docker image to Google Container Registry
#      - name: Publish
#        run: |
#          docker push gcr.io/$GKE_PROJECT/$WEB_IMAGE:$GITHUB_SHA
#
#  deploy:
#    name: Deploy
#    runs-on: ubuntu-latest
#    needs: docker
#    steps:
#      - name: Checkout
#        uses: actions/checkout@master